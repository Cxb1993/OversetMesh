/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | foam-extend: Open Source CFD                    |
|  \\    /   O peration     | Version:     3.1                                |
|   \\  /    A nd           | Web:         http://www.extend-project.de       |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    object      controlDict;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

startFrom       latestTime;

startTime       0;

stopAt          endTime;

endTime         25000;

deltaT          1;

firstHarmonicReconstruct false;

backSweep       false;

writeControl    timeStep;

writeInterval   100;

purgeWrite      5;

writeFormat     ascii;

writePrecision  6;

writeCompression compressed;

timeFormat      general;

timePrecision   6;

graphFormat     raw;

runTimeModifiable yes;

functions
(
    forces12
    {
        type                forces;
        functionObjectLibs  ( "libforces.so" );
        outputControl       timeStep;
        outputInterval      10;
        patches             (wall);
        pName               pTime12;
        UName               UTime12;
        rhoName             rhoInf;
        log                 true;
        rhoInf              1;
        CofR                (0 0 0);
        liftDir             (0 1 0);
        dragDir             (-1 0 0);
        lRef                1;
        Aref                1;
    }
    forces6
    {
        type                forces;
        functionObjectLibs  ( "libforces.so" );
        outputControl       timeStep;
        outputInterval      10;
        patches             (wall);
        pName               pTime6;
        UName               UTime6;
        rhoName             rhoInf;
        log                 true;
        rhoInf              1;
        CofR                (0 0 0);
        liftDir             (0 1 0);
        dragDir             (-1 0 0);
        lRef                1;
        Aref                1;
    }



forceCoeffs
{
    type                forceCoeffs;
    functionObjectLibs  ( "libforces.so" );
    outputControl       timeStep;
    outputInterval      1;
 
    patches             ( wall );
    pName               pTime6;
    UName               UTime6;
    rhoName             rhoInf;
    log                 true;
     
    liftDir             (0 1 0);
    dragDir             (-1 0 0);
    CofR                (0 0 0);
    pitchAxis           (0 0 1);
     
    magUInf             1.5;
    rhoInf              1000;
    lRef                1;
    Aref                1;
}



/*    flux
    {
        type        divFlux;
        phiName     phi;

        functionObjectLibs ("libutilityFunctionObjects.so");
    }

    Mach
    {
        type        MachNumber;
        UName       U;

        functionObjectLibs ("libutilityFunctionObjects.so");
    }

    minMaxU
    {
        type        minMaxField;

        // Where to load it from (if not already in solver)
        functionObjectLibs ("libfieldFunctionObjects.so");

        name U;
    }

    minMaxP
    {
        type        minMaxField;

        // Where to load it from (if not already in solver)
        functionObjectLibs ("libfieldFunctionObjects.so");

        name p;
    }

    minMaxRho
    {
        type        minMaxField;

        // Where to load it from (if not already in solver)
        functionObjectLibs ("libfieldFunctionObjects.so");

        name rho;
    }

    minMaxT
    {
        type        minMaxField;

        // Where to load it from (if not already in solver)
        functionObjectLibs ("libfieldFunctionObjects.so");

        name T;
    }*/
);

// ************************************************************************* //
